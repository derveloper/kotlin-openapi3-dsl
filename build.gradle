group 'cc.vileda'
version '0.20.2'

buildscript {
    ext.kotlin_version = '1.3.72'
    ext.jackson_version = '2.11.0'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
    }
}

apply plugin: 'kotlin'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "derveloper"
            name "Tristan Leo"
            email "vileda@vileda.cc"
        }
    }

    scm {
        url "https://github.com/derveloper/kotlin-openapi3-dsl"
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

// Create the publication with the pom configuration:
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'cc.vileda'
            artifactId 'kotlin-openapi3-dsl'
            version "$version"
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Build your OpenApi3 spec in kotlin!')
                root.appendNode('name', 'kotlin-openapi3-dsl')
                root.appendNode('url', 'https://github.com/derveloper/kotlin-openapi3-dsl')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : (System.getenv('BINTRAY_USER') != null ? System.getenv('BINTRAY_USER') : "")
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : (System.getenv('BINTRAY_API_KEY') != null ? System.getenv('BINTRAY_API_KEY') : "")
    publications = ['mavenJava']
    publish = true
    pkg {
        repo = 'maven'
        name = 'kotlin-openapi3-dsl'
        userOrg = 'vileda'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/derveloper/kotlin-openapi3-dsl.git'
        version {
            name = project.version
            gpg {
                sign = true
                passphrase = project.hasProperty('gpgPass') ? project.property('gpgPass') : (System.getenv('GPG_PASS') != null ? System.getenv('GPG_PASS') : "")
            }
            mavenCentralSync {
                sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
                user = project.hasProperty('sonaAccessUser') ? project.property('sonaAccessUser') : (System.getenv('SONA_ACCESS_USER') != null ? System.getenv('SONA_ACCESS_USER') : "")
                password = project.hasProperty('sonaAccessToken') ? project.property('sonaAccessToken') : (System.getenv('SONA_ACCESS_TOKEN') != null ? System.getenv('SONA_ACCESS_TOKEN') : "")
                close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
            }
        }
    }
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "$jackson_version"
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "$jackson_version"
    implementation "com.fasterxml.jackson.module:jackson-module-jsonSchema:$jackson_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-json-org:$jackson_version"
    implementation group: 'com.reprezen.kaizen', name: 'openapi-parser', version: '4.0.4'
    implementation 'io.swagger.core.v3:swagger-core:2.1.2'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.4.2'
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}